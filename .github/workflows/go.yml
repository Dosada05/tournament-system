name: Build and Push Docker Image

# Триггеры: пуш в main или ручной запуск
on:
  push:
    branches: [ main ]
  workflow_dispatch: # Позволяет запускать workflow вручную из интерфейса GitHub Actions

jobs:
  test:
    name: Run Tests with DB Schema
    runs-on: ubuntu-latest

    # Запускаем сервис PostgreSQL для тестов
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123123
          POSTGRES_DB: tsdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'
          cache: true

      - name: Install dependencies
        run: go mod download

      - name: Wait for PostgreSQL service
        run: sleep 15

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Apply DB Schema using psql
        run: PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -p $DB_PORT -a -f $SCHEMA_FILE
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: 123123
          DB_NAME: tsdb
          SCHEMA_FILE: ./db/migrations/000001_init_schema.up.sql
      # --- КОНЕЦ ШАГОВ ДЛЯ БД ---

      - name: Run Go tests
        # Передаем URL тестовой БД в тесты
        run: go test -v ./...
        env:
          # Тесты должны читать эту переменную
          TEST_DATABASE_URL: "postgres://testuser:testpassword@localhost:5432/testdb?sslmode=disable"

  # --- НОВАЯ ЗАДАЧА: Сборка и Пуш в Docker Hub ---
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    # Запускаем только после успешного завершения тестов
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Используем секрет GitHub
          password: ${{ secrets.DOCKERHUB_TOKEN }}  # Используем секрет GitHub (Access Token)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: ./Dockerfile
          push: true 
          tags: |
            yernursarzh/tournament-system:latest
            yernursarzh/tournament-system:${{ github.sha }} # Тег с коротким хешем коммита
